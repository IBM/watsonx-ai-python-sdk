IBM watsonx.ai software
=======================

Requirements
------------
For information on how to start working with IBM watsonx.ai software, refer to `Getting started with IBM Cloud Pak® for Data 4.8 <https://www.ibm.com/docs/en/cloud-paks/cp-data/4.8.x?topic=getting-started-tutorials>`_.

Supported machine learning frameworks
-------------------------------------
For a list of supported machine learning frameworks (models) of IBM watsonx.ai software, refer to `watsonx.ai documentation`:
 - `IBM Cloud Pak® for Data 4.8.x <https://www.ibm.com/docs/en/cloud-paks/cp-data/4.8.x?topic=specifications-supported-frameworks-software>`_
 - `IBM Cloud Pak® for Data 5.0.x <https://www.ibm.com/docs/en/cloud-paks/cp-data/5.0.x?topic=specifications-supported-frameworks-software>`_

Authentication
--------------
If you are a user of IBM watsonx.ai software with IBM Cloud Pak® for Data 4.8, you can create a IBM watsonx.ai Python client by providing your credentials or using a token:

.. Note::
    To determine your <APIKEY>, refer to `Generating API keys <https://www.ibm.com/docs/en/cloud-paks/cp-data/4.8.x?topic=steps-generating-api-keys>`_.

    The base URL for ibm_watsonx_ai comes from the cluster and add-on service instance. The URL follows this pattern:

    ``https://{cpd_cluster}``

    ``{cpd_cluster}`` represents the name or IP address of your deployed cluster. For the Cloud Pak for Data system, use a hostname that resolves to an IP address in the cluster.

    To find the base URL, view the details for the service instance from the Cloud Pak for Data web client. Use that URL in your requests to watsonx.ai software.

Example of creating the client using `username` and `password` credentials:

.. code-block:: python

    from ibm_watsonx_ai import APIClient
    from ibm_watsonx_ai import Credentials

    credentials = Credentials(
                       url = "<URL>",
                       username = "<USERNAME>",
                       password = "<PASSWORD>",
                       instance_id = "openshift",
                       version = "4.8"
                      )

    client = APIClient(credentials)

Example of creating the client using `username` and `apikey` credentials:

.. code-block:: python

    from ibm_watsonx_ai import APIClient
    from ibm_watsonx_ai import Credentials

    credentials = Credentials(
                       url = "<URL>",
                       username = "<USERNAME>",
                       api_key = "<API_KEY>",
                       instance_id = "openshift",
                       version = "4.8"
                      )

    client = APIClient(credentials)

Example of creating the client using a token:

**Note:** In IBM watsonx.ai software with IBM Cloud Pak® for Data 4.8, you can authenticate with a token set in the notebook environment.

.. code-block:: python

    access_token = os.environ['USER_ACCESS_TOKEN']
    from ibm_watsonx_ai import APIClient
    from ibm_watsonx_ai import Credentials

    credentials = Credentials(
                       url = "<URL>",
                       token = access_token,
                       instance_id = "openshift"
                       version = "4.8"
                      )
    client = APIClient(credentials)

**Note:**
      * The version value should be set to the version and release format (for example: `4.8`) for the IBM watsonx.ai software you are using.
      * Setting a default space ID or project ID is mandatory. For examples, refer to the ``client.set.default_space()`` and ``client.set.default_project()`` APIs in this document.

**Note for IBM watsonx.ai software with IBM Cloud Pak® for Data 4.8 and later:**
    If the following error appears during authentication:

    .. code-block::

        Attempt of generating `bedrock_url` automatically failed.
        If iamintegration=True, please provide `bedrock_url` in wml_credentials.
        If iamintegration=False, please validate your credentials.

    There are two possible causes:

    1. If you chose iamintegration=False (default configuration) during installation, the credentials might be invalid or the service is temporary unavailable.
    2. If you chose iamintegration=True during installation, the autogeneration of `bedrock_url` wasn't successful. Provide the IBM Cloud Pak foundational services URL as the `bedrock_url` param in the wml_credentials.

       To get the IBM Cloud Pak foundational services URL, refer to `Authenticating for programmatic access <https://www.ibm.com/docs/en/cloud-paks/cp-data/4.8.x?topic=deployments-authenticating-programmatic-access>`__.
